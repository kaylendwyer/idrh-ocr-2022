{"0": {
    "doc": "Home",
    "title": "Introduction to OCR &amp; the Unix Shell: Creating a text-as-data corpus from digitized books",
    "content": "Friday, April 29, 2022 12pm to 2pm . Optical Character Recognition (OCR) software converts scanned images of typed, handwritten, or printed text into machine-readable and searchable files. This hands-on workshop will teach participants how to use OCR with printed text to create a text corpus for humanities data analysis. We will look at the basics of OCR, tools for processing, and introduce workflows for building a text-as-data corpus from printed text. We’ll learn how to use Tesseract-OCR, an open-source command line program. For humanists without experience working in the command line, the first hour of the workshop (12-1pm) will be a primer on the command line interface—what it’s for, how to open it, how to navigate directories, and how to manipulate files. The second hour (1-2pm) will dig into OCR and how to use Tesseract for extracting structured information from a page. ",
    "url": "http://localhost:4000/idrh-ocr-2022/#introduction-to-ocr--the-unix-shell-creating-a-text-as-data-corpus-from-digitized-books",
    "relUrl": "/#introduction-to-ocr--the-unix-shell-creating-a-text-as-data-corpus-from-digitized-books"
  },"1": {
    "doc": "Home",
    "title": "Instructors:",
    "content": "Jamene Brooks-Kieffer, Associate Librarian / Data Services Librarian &amp; Coordinator of Digital Scholarship, University of Kansas Libraries . Kaylen Dwyer, Digital Media Specialist, The Institute for Digital Research in the Humanities . ",
    "url": "http://localhost:4000/idrh-ocr-2022/#instructors",
    "relUrl": "/#instructors"
  },"2": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/",
    "relUrl": "/"
  },"3": {
    "doc": "Unix Shell",
    "title": "Introduction to the Shell",
    "content": "Some content goes here . ",
    "url": "http://localhost:4000/idrh-ocr-2022/unix-shell/#introduction-to-the-shell",
    "relUrl": "/unix-shell/#introduction-to-the-shell"
  },"4": {
    "doc": "Unix Shell",
    "title": "Unix Shell",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/unix-shell/",
    "relUrl": "/unix-shell/"
  },"5": {
    "doc": "Introduction to OCR",
    "title": "Introduction to OCR",
    "content": "Some content goes here . ",
    "url": "http://localhost:4000/idrh-ocr-2022/introduction-to-ocr/",
    "relUrl": "/introduction-to-ocr/"
  },"6": {
    "doc": "Introduction to OCR",
    "title": "Before we run OCR",
    "content": "Image capture &amp; selection . Image preprocessing . ",
    "url": "http://localhost:4000/idrh-ocr-2022/introduction-to-ocr/#before-we-run-ocr",
    "relUrl": "/introduction-to-ocr/#before-we-run-ocr"
  },"7": {
    "doc": "Tesseract Basics",
    "title": "OCR with Tesseract",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/tesseract-basics/#ocr-with-tesseract",
    "relUrl": "/tesseract-basics/#ocr-with-tesseract"
  },"8": {
    "doc": "Tesseract Basics",
    "title": "The Basics",
    "content": "Tesseract’s default settings are set to recognize English language, use automatic page segmentation (recognizing page format and columns), and genarate a plain text file. The simplest way to invoke tesseract : . tesseract myimage.jpg myimage . Example: Simple OCR . Input: . tesseract christmas-carol-pg1.jpg christmas-carol-pg1-output . Result: . A CHRISTMAS CAROL. STAVE I. MARLEY’S GHOST. Marry was dead: to begin with. There is no doubt whatever about that. The register of his burial was signed by the clergyman, the clerk, the undertaker, and the chief mourner. Scrooge signed it: and Scrooge’s name was good upon ‘Change, for anything he chose to put his hand to. Old Marley was as dead as a door-nail. Mind! I don’t mean to say that I know, of my own knowledge, what there is particularly dead about a door-nail. I might have been inclined, myself, to regard a coffin-nail as the deadest piece of ironmongery in the trade. But the wisdom of our ancestors is in the simile; and my unhallowed B . ",
    "url": "http://localhost:4000/idrh-ocr-2022/tesseract-basics/#the-basics",
    "relUrl": "/tesseract-basics/#the-basics"
  },"9": {
    "doc": "Tesseract Basics",
    "title": "Tesseract Basics",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/tesseract-basics/",
    "relUrl": "/tesseract-basics/"
  },"10": {
    "doc": "Parameters",
    "title": "Parameters",
    "content": ". | Parameters . | Language Parameter | OCR Engine Modes (OEM) | Page Segmentation Modes (PSM) | File formats | . | . ",
    "url": "http://localhost:4000/idrh-ocr-2022/parameters/",
    "relUrl": "/parameters/"
  },"11": {
    "doc": "Parameters",
    "title": "Language Parameter",
    "content": "For documents in languages other than English, it is often necessary to specify the language(s) or script(s). The -l flag allows you to select one or multiple languages, specified by . Languages are specificed by codes 2-4 letters long, such as eng (English), fra (French), or spa (Spanish). Read more: Tesseract: Languages &amp; Scripts . Example: Set language parameter . tesseract cyrano_fra_cover.jpg cyrano_fra_cover_out -l fra . Result: . EDMOND ROSTAND CYRANO COMÉDIE HÉROÏQUE EN CINQ ACTES EN VERS Représentée à Paris, sur le Théâtre de la Porte Saint-Martin, le 28 décembre 1897 NEw YorK WILLIAM R. JENKINS ÉDITEUR ET LIBRAIRE FRANÇAIS 851 &amp; 853 SIXTH AVENUE cl . Use Lang+Lang for multilingual documents: . tesseract cyrano_fra_cover.jpg cyrano_fra_cover_out -l fra+eng . ",
    "url": "http://localhost:4000/idrh-ocr-2022/parameters/#language-parameter",
    "relUrl": "/parameters/#language-parameter"
  },"12": {
    "doc": "Parameters",
    "title": "OCR Engine Modes (OEM)",
    "content": "Tesseract has several modes which offer different approaches to OCR. The older modes (Tesseract 3 and older), implement a classic OCR predictive approach. Newer models use machine learning (LSTM). Tesseract offers little documentation on their models. View OCR engine models available: . tesseract --help-oem . Output: . OCR Engine modes: 0 Legacy engine only. 1 Neural nets LSTM engine only. 2 Legacy + LSTM engines. 3 Default, based on what is available. Not every language or script has been trained for LSTM, so the default mode runs an engine based on what training data is available. The newer approach using LSTM only, --oem 1 is slower, but often produces better results. ",
    "url": "http://localhost:4000/idrh-ocr-2022/parameters/#ocr-engine-modes-oem",
    "relUrl": "/parameters/#ocr-engine-modes-oem"
  },"13": {
    "doc": "Parameters",
    "title": "Page Segmentation Modes (PSM)",
    "content": "Page segmentation refers to the structure of the text on the file, whether the page contains a single block of text, columns, a single word, a word in a circle, etc. Tesseract assumes a single block of text. You can improve text detection by manually setting the page segmentation mode. Page segmentation modes: 0 Orientation and script detection (OSD) only. 1 Automatic page segmentation with OSD. 2 Automatic page segmentation, but no OSD, or OCR. (not implemented) 3 Fully automatic page segmentation, but no OSD. (Default) 4 Assume a single column of text of variable sizes. 5 Assume a single uniform block of vertically aligned text. 6 Assume a single uniform block of text. 7 Treat the image as a single text line. 8 Treat the image as a single word. 9 Treat the image as a single word in a circle. 10 Treat the image as a single character. 11 Sparse text. Find as much text as possible in no particular order. 12 Sparse text with OSD. 13 Raw line. Treat the image as a single text line, bypassing hacks that are Tesseract-specific. Resource: Page segmentation modes explained with clear examples . Example: Improve text detection with PSM . The following example contains a list of characters in two columns. The default page segmentation mode (--psm 3) is fully automated. In this instance, the automated psm fails to recognize the columns on the page. Each character should be listed on its own line. Input: . tesseract cyrano_eng_persons.jpg cyrano_eng_persons_default . Output: . THE PERSONS Cyrano pE Brrorrac The Porter CurisTIAN DE Ngvuvittetre A Citizen Comre pr GuICHE His Son RacuENEAU A Cut-Purse Lz Brer A Spectator Carson bE Casret-JaLoux A Sentry The Cadets Bertrandou the Fifer LicntbRE A Capuchin VicoMTE DE VALVERT Two Musicians A Marouts The Poets Second Marquis The Pastrycooks Third Marquis The Pages Montfleury Roxane Bellerose Her Dusnna Jodelet Lisz Cuicy Tue Orance-Gi BRIssAILLE Moruer MarcufrirTs DE Jésus A Meddler StsreR MARTHE A Musketeer StsTER CLAIRE Another Musketeer An Actress A Spanish Officer A Soubrette A Cavalier The Flower-Girl The Crowd, Citizens, Marquis, Musketeers, Thieves, Pas- trycooks, Poets, Cadets of Gascoyne, Actors, Violins, Pages, Children, Spanish Soldiers, Spectators, Intellectuals, Acade- micians, Nuns, etc. On this document, PSM 11 (Sparse Text: Find as Much Text as Possible in No Particular Order) does the trick. The Sparse Text model is particularly useful when you don’t care about the order of the text, but rather the text itself. It can also be helpful to retrieve the maximum amount of text from pages with more complex structures (multiple columns, newspapers with advertisements, etc.). Input: . tesseract cyrano_eng_persons.jpg cyrano_eng_persons_default --psm 11 . Output: . THE PERSONS Cyrano pE Brrorrac The Porter CuristTIAN DE NEUVILLETTE A Citizen His Son Comte pr GuicHE RacuENEAU A Cut-Purse Le Brer A Spectator Carson DE CasTEL-JALOUX A Sentry ... ",
    "url": "http://localhost:4000/idrh-ocr-2022/parameters/#page-segmentation-modes-psm",
    "relUrl": "/parameters/#page-segmentation-modes-psm"
  },"14": {
    "doc": "Parameters",
    "title": "File formats",
    "content": "Can generate multiple types of files: . | txt (default) | xml (run alto) | tsv | searchable pdf (run pdf) | hocr | . It is possible to generate several files at one time. tesseract image.png image-output alto hocr pdf txt Will generate four output files. image-output.alto, image-output.hocr, image-output.pdf, image-output.txt . ",
    "url": "http://localhost:4000/idrh-ocr-2022/parameters/#file-formats",
    "relUrl": "/parameters/#file-formats"
  },"15": {
    "doc": "Batch Processing",
    "title": "Tesseract on 100s, 1000s of Files",
    "content": "The real benefit to using Tesseract over other OCR tools is the speed and ease of processing batches of files. Basic input: . From within the directory of files (in this case, .jpg files). For each .jpg: . | Echo the name of the file (to keep track of what is being processed) | Instruct tesseract to run on a page, generate an image output, and apply any parameters. | complete the loop with “done” | . Input: . for page in *.jpg do echo \"$page\" tesseract \"$page\" \"$page-output\" -l eng done . Did it work? First check if the files have been created by listing everything in the folder: . Input: . ls . You should have a .txt file for every image file in the directory. The next step is to figure out if tesseract actually ran and wrote text to each file. Run head to check. Input: . head *.txt . Output example: . ==&gt; 00000012.jpg-output.txt &lt;== 2 A CHRISTMAS CAROL. hands shall not disturb it, or the Country ’s done for. You will therefore permit me to repeat, emphati- cally, that Marley was as dead as a door-nail. Scrooge knew he was dead? Of course he did. How could it be otherwise? Scrooge and he were partners for I don’t know how many years. Scrooge was his sole executor, his sole administrator, his ==&gt; 00000013.jpg-output.txt &lt;== MARLEY'S GHOST. 3 would be in any other middle-aged gentleman rashly turning out after dark in a breezy spot—say Saint Paul’s Churchyard for instance—literally to astonish his son’s weak mind. Scrooge never painted out Old Marley’s name. There it stood, years afterwards, above the ware- house door: Scrooge and Marley. The firm was . If you are running OCR on batches of random images, separate text files are useful. However, if you have a single book, you probably want the full text bundled together. We can combine cat and an output redirect to combine the files. Input: . cat *.txt &gt; full-book-title.txt . If it has run correctly, there will not be any message. To check if the file has been written correctly, we can run cat, less, head, or tail. ",
    "url": "http://localhost:4000/idrh-ocr-2022/batch-processing/#tesseract-on-100s-1000s-of-files",
    "relUrl": "/batch-processing/#tesseract-on-100s-1000s-of-files"
  },"16": {
    "doc": "Batch Processing",
    "title": "Batch Processing",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/batch-processing/",
    "relUrl": "/batch-processing/"
  },"17": {
    "doc": "HOCR",
    "title": "HOCR Output",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/hocr/#hocr-output",
    "relUrl": "/hocr/#hocr-output"
  },"18": {
    "doc": "HOCR",
    "title": "HOCR",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/hocr/",
    "relUrl": "/hocr/"
  },"19": {
    "doc": "Modules",
    "title": "Modules",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/modules/",
    "relUrl": "/modules/"
  },"20": {
    "doc": "Resources",
    "title": "Resources",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/resources/",
    "relUrl": "/resources/"
  },"21": {
    "doc": "Setup",
    "title": "Setting things up",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/setup/#setting-things-up",
    "relUrl": "/setup/#setting-things-up"
  },"22": {
    "doc": "Setup",
    "title": "Workshop setup",
    "content": "A description of what attendees need to do, but also a place to describe what we did, in case others want to replicate this? . ",
    "url": "http://localhost:4000/idrh-ocr-2022/setup/#workshop-setup",
    "relUrl": "/setup/#workshop-setup"
  },"23": {
    "doc": "Setup",
    "title": "Working at home",
    "content": "Installation . Downloads . ",
    "url": "http://localhost:4000/idrh-ocr-2022/setup/#working-at-home",
    "relUrl": "/setup/#working-at-home"
  },"24": {
    "doc": "Setup",
    "title": "Setup",
    "content": " ",
    "url": "http://localhost:4000/idrh-ocr-2022/setup/",
    "relUrl": "/setup/"
  }
}
